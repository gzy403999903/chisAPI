<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisapp.modules.financial.dao.WorkGroupMapper">
  <resultMap id="BaseResultMap" type="com.chisapp.modules.financial.bean.WorkGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="begin_time" jdbcType="TIME" property="beginTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flm_work_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chisapp.modules.financial.bean.WorkGroup">
    insert into flm_work_group (id, name, code,
      begin_time, end_time, state
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
      #{beginTime,jdbcType=TIME}, #{endTime,jdbcType=TIME}, #{state,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chisapp.modules.financial.bean.WorkGroup">
    update flm_work_group
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, code, begin_time, end_time, state
    from flm_work_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, code, begin_time, end_time, state
    from flm_work_group
  </select>

  <!-- ************************************************************************************************************* -->

  <select id="selectByCriteria" resultMap="BaseResultMap">
    select *
    from flm_work_group
    <trim prefix="where" suffixOverrides="and">
      <if test="state != null">
        (state = #{state}) and
      </if>
      <if test="name != null &amp;&amp; name.trim() != ''">
        (name like '${name}%' or code like '${name}%') and
      </if>
    </trim>
    order by id
  </select>

  <select id="selectEnabled" resultMap="BaseResultMap">
    select *
    from flm_work_group
    where (state is true)
    order by id
  </select>























</mapper>
