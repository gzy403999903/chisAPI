<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisapp.modules.nurseworkstation.dao.RegistrationRecordMapper">
  <resultMap id="BaseResultMap" type="com.chisapp.modules.nurseworkstation.bean.RegistrationRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lsh" jdbcType="VARCHAR" property="lsh" />
    <result column="mrm_member_id" jdbcType="INTEGER" property="mrmMemberId" />
    <result column="cim_item_id" jdbcType="INTEGER" property="cimItemId" />
    <result column="sys_doctor_id" jdbcType="INTEGER" property="sysDoctorId" />
    <result column="sys_clinic_id" jdbcType="INTEGER" property="sysClinicId" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nwt_registration_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chisapp.modules.nurseworkstation.bean.RegistrationRecord">
    insert into nwt_registration_record (id, lsh, mrm_member_id,
      cim_item_id, sys_doctor_id, sys_clinic_id,
      creator_id, creation_date)
    values (#{id,jdbcType=INTEGER}, #{lsh,jdbcType=VARCHAR}, #{mrmMemberId,jdbcType=INTEGER},
      #{cimItemId,jdbcType=INTEGER}, #{sysDoctorId,jdbcType=INTEGER}, #{sysClinicId,jdbcType=INTEGER},
      #{creatorId,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chisapp.modules.nurseworkstation.bean.RegistrationRecord">
    update nwt_registration_record
    set lsh = #{lsh,jdbcType=VARCHAR},
      mrm_member_id = #{mrmMemberId,jdbcType=INTEGER},
      cim_item_id = #{cimItemId,jdbcType=INTEGER},
      sys_doctor_id = #{sysDoctorId,jdbcType=INTEGER},
      sys_clinic_id = #{sysClinicId,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, lsh, mrm_member_id, cim_item_id, sys_doctor_id, sys_clinic_id, creator_id,
    creation_date
    from nwt_registration_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, lsh, mrm_member_id, cim_item_id, sys_doctor_id, sys_clinic_id, creator_id,
    creation_date
    from nwt_registration_record
  </select>


  <!--***************************************************************************************************************-->

  <select id="selectClinicListByCriteria" resultType="map">
    select *
    from view_nwt_registration_record
    <trim prefix="where" suffixOverrides="and">
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="mrmMemberName != null &amp;&amp; mrmMemberName.trim() != ''">
        (mrmMemberName like '${mrmMemberName}%' or mrmMemberCode like '${mrmMemberName}%' or phone like '${mrmMemberName}%') and
      </if>
      <if test="cimItemName != null &amp;&amp; cimItemName.trim() != ''">
        (cimItemName like '${cimItemName}%' or cimItemCode like '${cimItemName}%') and
      </if>
      <if test="sysDoctorName != null &amp;&amp; sysDoctorName.trim() != ''">
        (sysDoctorName like '${sysDoctorName}%' or sysDoctorCode like '${sysDoctorName}%') and
      </if>
    </trim>
    order by creationDate desc
  </select>


</mapper>
