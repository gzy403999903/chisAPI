<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisapp.modules.inventory.dao.InventoryAllotMapper">
  <resultMap id="BaseResultMap" type="com.chisapp.modules.inventory.bean.InventoryAllot">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lsh" jdbcType="VARCHAR" property="lsh" />
    <result column="mxh" jdbcType="VARCHAR" property="mxh" />
    <result column="sys_clinic_id" jdbcType="INTEGER" property="sysClinicId" />
    <result column="original_iym_inventory_type_id" jdbcType="INTEGER" property="originalIymInventoryTypeId" />
    <result column="to_iym_inventory_type_id" jdbcType="INTEGER" property="toIymInventoryTypeId" />
    <result column="iym_inventory_id" jdbcType="INTEGER" property="iymInventoryId" />
    <result column="gsm_goods_id" jdbcType="INTEGER" property="gsmGoodsId" />
    <result column="ph" jdbcType="VARCHAR" property="ph" />
    <result column="pch" jdbcType="VARCHAR" property="pch" />
    <result column="split_quantity" jdbcType="INTEGER" property="splitQuantity" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="approver_id" jdbcType="INTEGER" property="approverId" />
    <result column="approve_date" jdbcType="TIMESTAMP" property="approveDate" />
    <result column="approve_state" jdbcType="TINYINT" property="approveState" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from iym_inventory_allot
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chisapp.modules.inventory.bean.InventoryAllot">
    insert into iym_inventory_allot (id, lsh, mxh,
      sys_clinic_id, original_iym_inventory_type_id,
      to_iym_inventory_type_id, iym_inventory_id, gsm_goods_id,
      ph, pch, split_quantity,
      quantity, creator_id, creation_date,
      approver_id, approve_date, approve_state
      )
    values (#{id,jdbcType=INTEGER}, #{lsh,jdbcType=VARCHAR}, #{mxh,jdbcType=VARCHAR},
      #{sysClinicId,jdbcType=INTEGER}, #{originalIymInventoryTypeId,jdbcType=INTEGER},
      #{toIymInventoryTypeId,jdbcType=INTEGER}, #{iymInventoryId,jdbcType=INTEGER}, #{gsmGoodsId,jdbcType=INTEGER},
      #{ph,jdbcType=VARCHAR}, #{pch,jdbcType=VARCHAR}, #{splitQuantity,jdbcType=INTEGER},
      #{quantity,jdbcType=INTEGER}, #{creatorId,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP},
      #{approverId,jdbcType=INTEGER}, #{approveDate,jdbcType=TIMESTAMP}, #{approveState,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chisapp.modules.inventory.bean.InventoryAllot">
    update iym_inventory_allot
    set lsh = #{lsh,jdbcType=VARCHAR},
      mxh = #{mxh,jdbcType=VARCHAR},
      sys_clinic_id = #{sysClinicId,jdbcType=INTEGER},
      original_iym_inventory_type_id = #{originalIymInventoryTypeId,jdbcType=INTEGER},
      to_iym_inventory_type_id = #{toIymInventoryTypeId,jdbcType=INTEGER},
      iym_inventory_id = #{iymInventoryId,jdbcType=INTEGER},
      gsm_goods_id = #{gsmGoodsId,jdbcType=INTEGER},
      ph = #{ph,jdbcType=VARCHAR},
      pch = #{pch,jdbcType=VARCHAR},
      split_quantity = #{splitQuantity,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      approver_id = #{approverId,jdbcType=INTEGER},
      approve_date = #{approveDate,jdbcType=TIMESTAMP},
      approve_state = #{approveState,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, lsh, mxh, sys_clinic_id, original_iym_inventory_type_id, to_iym_inventory_type_id,
    iym_inventory_id, gsm_goods_id, ph, pch, split_quantity, quantity, creator_id, creation_date,
    approver_id, approve_date, approve_state
    from iym_inventory_allot
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, lsh, mxh, sys_clinic_id, original_iym_inventory_type_id, to_iym_inventory_type_id,
    iym_inventory_id, gsm_goods_id, ph, pch, split_quantity, quantity, creator_id, creation_date,
    approver_id, approve_date, approve_state
    from iym_inventory_allot
  </select>



  <!-- ************************************************************************************************************* -->
  <update id="updateApproveStateByLsh">
    update
      iym_inventory_allot
    set
      approver_id = #{approverId}, approve_date = #{approveDate}, approve_state = #{approveState}
    where
      lsh = #{lsh}
  </update>

  <select id="selectClinicListByCriteria" resultType="map">
    select *
    from view_iym_inventory_allot
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="approveState != null">
        (approveState = #{approveState}) and
      </if>
      <if test="gsmGoodsName != null &amp;&amp; gsmGoodsName.trim() != ''">
        (gsmGoodsName like '${gsmGoodsName}%' or gsmGoodsCode like '${gsmGoodsName}%') and
      </if>
    </trim>
    order by creationDate desc, lsh desc, gsmGoodsOid
  </select>

  <select id="selectClinicLshGroupListByCriteria" resultType="map">
    select
    creationDate, lsh, originalIymInventoryTypeName, toIymInventoryTypeName,
    creatorName, approverName, approveDate, approveState, sysClinicName
    from view_iym_inventory_allot
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="approveState != null">
        (approveState = #{approveState}) and
      </if>
    </trim>
    group by lsh
    order by creationDate desc, lsh desc
  </select>

  <select id="selectByLsh" resultType="map">
    select *
    from view_iym_inventory_allot
    where lsh = #{lsh}
    order by gsmGoodsOid
  </select>


</mapper>
