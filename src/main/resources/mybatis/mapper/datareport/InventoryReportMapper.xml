<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisapp.modules.datareport.dao.InventoryReportMapper">

  <!--
      &lt; <
      &gt; >
      &amp; &
  -->
  <!-- 近效期商品 -->
  <select id="selectExpiryDateListByCriteria" resultType="map">
    SELECT *, DATEDIFF(expiryDate, NOW()) AS days
    FROM view_iym_inventory
    <trim prefix="where" suffixOverrides="and">
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="true">
        (quantity > 0) and
      </if>
      <if test="filterDays != null">
        (DATEDIFF(expiryDate, NOW()) &lt; #{filterDays}) and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
    </trim>
    ORDER BY days
  </select>

  <!-- 获取近效期商品数 -->
  <select id="countExpiryDateListByCriteria" resultType="int">
    select count(a.id) as sums
    from iym_inventory a
    left join iym_inventory_type b on a.iym_inventory_type_id = b.id
    <trim prefix="where" suffixOverrides="and">
      <if test="sysClinicId != null">
        (a.sys_clinic_id = #{sysClinicId}) and
      </if>
      <if test="true">
        (a.quantity > 0) and
      </if>
      <if test="true">
        (b.sellable is true) and
      </if>
      <if test="filterDays != null">
        (DATEDIFF(a.expiry_date, NOW()) &lt; #{filterDays}) and
      </if>
    </trim>
  </select>

  <!-- 库存动销分析 -->
  <select id="selectSellFrequencyListByCriteria" resultType="map">
    SELECT
      a.*,
      IFNULL(b.lastCreationDate, '') AS lastCreationDate,
      IFNULL(b.sellFrequency, 0) AS sellFrequency,
      IFNULL(b.sellQuantity, 0) AS sellQuantity,
      IFNULL(b.averageQuantity, 0) AS averageQuantity,
      IFNULL(b.maxQuantity, 0) AS maxQuantity,
      IFNULL(b.minQuantity, 0) AS minQuantity,
      DATEDIFF(NOW(),c.`creation_date`) AS minAge
    FROM (
      SELECT
        sysClinicId, sysClinicName, sysClinicCode,
        gsmGoodsTypeId, gsmGoodsTypeName, gsmGoodsId, gsmGoodsOid, gsmGoodsName,
        gsmGoodsCode, gsmGoodsSpecs, goodsUnitsName, retailPrice, originName,
        manufacturerName, goodsClassifyName, SUM(quantity) AS quantity, splitQuantity,
        MAX(iymInventoryAddId) AS iymInventoryAddId
      FROM view_iym_inventory
      <trim prefix="where" suffixOverrides="and">
        <if test="sysClinicId != null">
          (sysClinicId = #{sysClinicId}) and
        </if>
        <if test="quantity != null">
          (quantity &gt;= #{quantity}) and
        </if>
        <if test="gsmGoodsTypeId != null">
          (gsmGoodsTypeId = #{gsmGoodsTypeId}) and
        </if>
        <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
          (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
        </if>
        <if test="gsmGoodsOid != null &amp;&amp; gsmGoodsOid.trim() != ''">
          (gsmGoodsOid like '${gsmGoodsOid}%') and
        </if>
        <if test="gsmGoodsName != null &amp;&amp; gsmGoodsName.trim() != ''">
          (gsmGoodsName like '${gsmGoodsName}%' or gsmGoodsCode like '${gsmGoodsName}%') and
        </if>
      </trim>
      GROUP BY sysClinicId, gsmGoodsId, splitQuantity
    ) a
    LEFT JOIN (
      SELECT
        sys_clinic_id AS sysClinicId, entity_id AS gsmGoodsId, split_quantity AS splitQuantity,
        MAX(creation_date) AS lastCreationDate, COUNT(lsh) AS sellFrequency, SUM(quantity) AS sellQuantity,
        ROUND((SUM(quantity) / COUNT(lsh)), 0) AS averageQuantity, MAX(quantity) AS maxQuantity, MIN(quantity) AS minQuantity
      FROM dr_sell_record
      WHERE
        (DATE_FORMAT(creation_date, '%Y-%m-%d') BETWEEN DATE_SUB(NOW(),INTERVAL ${days} DAY) AND NOW()) AND
        sys_sell_type_id = 1 AND
        returned = 0
      GROUP BY sys_clinic_id, entity_id, split_quantity
    ) b ON a.sysClinicId = b.sysClinicId AND a.gsmGoodsId = b.gsmGoodsId AND a.splitQuantity = b.splitQuantity
    LEFT JOIN iym_inventory_add c ON a.iymInventoryAddId = c.`id`
    <trim prefix="where" suffixOverrides="and">
      <if test="sellFrequency != null">
        (IFNULL(sellFrequency, 0) &lt;= #{sellFrequency}) AND
      </if>
      <if test="sellQuantity != null">
        (IFNULL(sellQuantity, 0) &lt;= #{sellQuantity}) AND
      </if>
    </trim>
    <if test="minAge != null">
      HAVING minAge >= ${minAge}
    </if>
    ORDER BY minAge desc, quantity desc, sellFrequency, sellQuantity
  </select>

  <!-- 库存协定成本报表 -->
  <select id="selectInventoryAssessCostByCriteria" resultType="map">
    SELECT
      gsmGoodsTypeName, gsmGoodsOid, gsmGoodsName, gsmGoodsSpecs, goodsUnitsName,
      retailPrice, costPrice, firstCostPrice, secondCostPrice, SUM(quantity) AS quantity,
      manufacturerName, originName, goodsClassifyName,
      pemSupplierId, pemSupplierOid, pemSupplierName, sysClinicName
    FROM view_iym_inventory
    <trim prefix="where" suffixOverrides="and">
      <if test="true">
        (quantity > 0 ) and
      </if>
      <if test="gsmGoodsOid != null &amp;&amp; gsmGoodsOid.trim() != ''">
        (gsmGoodsOid = #{gsmGoodsOid}) and
      </if>
      <if test="gsmGoodsName != null &amp;&amp; gsmGoodsName.trim() != ''">
        (gsmGoodsName like '${gsmGoodsName}%' or gsmGoodsCode like '${gsmGoodsName}%') and
      </if>
      <if test="pemSupplierOid != null &amp;&amp; pemSupplierOid.trim() != ''">
        (pemSupplierOid = #{pemSupplierOid}) and
      </if>
      <if test="pemSupplierName != null &amp;&amp; pemSupplierName.trim() != ''">
        (pemSupplierName like '${pemSupplierName}%' or pemSupplierCode like '${pemSupplierName}%') and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
    </trim>
    <if test="groupBy == 'clinic'">
      GROUP BY sysClinicId, gsmGoodsId, costPrice, firstCostPrice, secondCostPrice, pemSupplierId
      ORDER BY sysClinicId, gsmGoodsOid
    </if>
    <if test="groupBy != 'clinic'">
      GROUP BY gsmGoodsId, costPrice, firstCostPrice, secondCostPrice, pemSupplierId
      ORDER BY gsmGoodsOid
    </if>
  </select>


</mapper>
