<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chisapp.modules.datareport.dao.SellRecordReportMapper">

  <!-- 销售明细 -->
  <select id="selectByCriteria" resultType="map">
    select *
    from view_dr_sell_record
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="invoiceDate != null &amp;&amp; invoiceDate.length == 2">
        (DATE_FORMAT(invoiceDate, '%Y-%m-%d') between #{invoiceDate[0]} and #{invoiceDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="sysSellTypeId != null">
        (sysSellTypeId = #{sysSellTypeId}) and
      </if>
      <if test="entityTypeId != null">
        (entityTypeId = #{entityTypeId}) and
      </if>
      <if test="sellerId != null">
        (sellerId = #{sellerId}) and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
      <if test="lsh != null &amp;&amp; lsh.trim() != ''">
        (lsh like '${lsh}%') and
      </if>
      <if test="entityOid != null &amp;&amp; entityOid.trim() != ''">
        (entityOid like '${entityOid}%') and
      </if>
      <if test="entityName != null &amp;&amp; entityName.trim() != ''">
        (entityName like '${entityName}%' or entityCode like '${entityName}%') and
      </if>
      <if test="mrmMemberName != null &amp;&amp; mrmMemberName.trim() != ''">
        (mrmMemberName like '${mrmMemberName}%' or mrmMemberCode like '${mrmMemberName}%') and
      </if>
      <if test="phone != null &amp;&amp; phone.trim() != ''">
        (phone like '${phone}%') and
      </if>
      <if test="sellerName != null &amp;&amp; sellerName.trim() != ''">
        (sellerName like '${sellerName}%' or sellerCode like '${sellerName}%') and
      </if>
    </trim>
    order by creationDate desc, sysClinicId, sysSellTypeId, entityTypeId, entityId
  </select>

  <!-- 计算销售明细属性 -->
  <select id="countSellRecordByCriteria" resultType="map">
    SELECT
      a.*,
      (a.hsxs - a.hscb) AS hsml,
      (a.wsxs - a.wscb) AS wsml,
      ROUND(((a.hsxs - a.hscb) / a.hsxs * 100),2) AS mll
    FROM (
    SELECT
      ROUND(SUM(quantity * actualRetailPrice),2) AS hsxs,
      ROUND(SUM(quantity * (actualRetailPrice / ((100 + IFNULL(sellTaxRate, 0)) / 100))), 2) AS wsxs,
      ROUND(SUM(quantity * costPrice),2) AS hscb,
      ROUND(SUM(quantity * (costPrice / ((100 + IFNULL(purchaseTaxRate, 0)) / 100))),2) AS wscb
    FROM view_dr_sell_record
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="invoiceDate != null &amp;&amp; invoiceDate.length == 2">
        (DATE_FORMAT(invoiceDate, '%Y-%m-%d') between #{invoiceDate[0]} and #{invoiceDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="sysSellTypeId != null">
        (sysSellTypeId = #{sysSellTypeId}) and
      </if>
      <if test="entityTypeId != null">
        (entityTypeId = #{entityTypeId}) and
      </if>
      <if test="sellerId != null">
        (sellerId = #{sellerId}) and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
      <if test="lsh != null &amp;&amp; lsh.trim() != ''">
        (lsh like '${lsh}%') and
      </if>
      <if test="entityOid != null &amp;&amp; entityOid.trim() != ''">
        (entityOid like '${entityOid}%') and
      </if>
      <if test="entityName != null &amp;&amp; entityName.trim() != ''">
        (entityName like '${entityName}%' or entityCode like '${entityName}%') and
      </if>
      <if test="mrmMemberName != null &amp;&amp; mrmMemberName.trim() != ''">
        (mrmMemberName like '${mrmMemberName}%' or mrmMemberCode like '${mrmMemberName}%') and
      </if>
      <if test="phone != null &amp;&amp; phone.trim() != ''">
        (phone like '${phone}%') and
      </if>
      <if test="sellerName != null &amp;&amp; sellerName.trim() != ''">
        (sellerName like '${sellerName}%' or sellerCode like '${sellerName}%') and
      </if>
    </trim>
    ) a
  </select>

  <!-- 计费类型汇总 -->
  <select id="selectBillingTypeGroupListByCriteria" resultType="map">
    SELECT
      ROUND(SUM( CASE WHEN billingTypeId = 4 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS xyf , /*西药费*/
      ROUND(SUM( CASE WHEN billingTypeId = 5 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS zyf , /*中药费*/
      ROUND(SUM( CASE WHEN billingTypeId = 6 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS zcyf , /*中成药费*/
      ROUND(SUM( CASE WHEN billingTypeId = 7 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS jcf , /*检查费*/
      ROUND(SUM( CASE WHEN billingTypeId = 8 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS hyf , /*化验费*/
      ROUND(SUM( CASE WHEN billingTypeId = 9 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS llf , /*理疗费*/
      ROUND(SUM( CASE WHEN billingTypeId = 10 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS fwf , /*服务费*/
      ROUND(SUM( CASE WHEN billingTypeId = 11 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS ghf , /*挂号费*/
      ROUND(SUM( CASE WHEN billingTypeId = 12 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS zlf , /*治疗费*/
      ROUND(SUM( CASE WHEN billingTypeId = 13 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS czf , /*出诊费*/
      ROUND(SUM( CASE WHEN billingTypeId = 177 THEN (actualRetailPrice * quantity) ELSE 0 END), 2) AS clf , /*材料费*/
      ROUND(SUM(actualRetailPrice * quantity), 2) AS xj, /*小计*/
      DATE_FORMAT(creationDate, '%Y-%m-%d') as creationDate,
      sysClinicName
    FROM view_dr_sell_record
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
    </trim>
    GROUP BY DATE_FORMAT(creationDate, '%Y-%m-%d'), sysClinicId
    ORDER BY DATE_FORMAT(creationDate, '%Y-%m-%d') desc, sysClinicId
  </select>

  <!-- 销售毛利 -->
  <select id="selectMarginRateListByCriteria" resultType="map">
    SELECT
      a.*,
      ROUND((CASE WHEN a.goodsRetailAmount &lt;= 0 THEN 0 ELSE ((a.goodsRetailAmount - a.goodsCostAmount) / a.goodsRetailAmount * 100) END ), 2) AS goodsRetailMarginRate,
      ROUND((CASE WHEN a.goodsActualAmount &lt;= 0 THEN 0 ELSE ((a.goodsActualAmount - a.goodsCostAmount) / a.goodsActualAmount * 100) END ), 2) AS goodsActualMarginRate,
      ROUND((CASE WHEN a.retailAmount &lt;= 0 THEN 0 ELSE ((a.retailAmount - a.costAmount) / a.retailAmount * 100) END ), 2) AS retailMarginRate,
      ROUND((CASE WHEN a.actualAmount &lt;= 0 THEN 0 ELSE ((a.actualAmount - a.costAmount) / a.actualAmount * 100) END ), 2) AS actualMarginRate,
      ROUND((CASE WHEN a.goodsActualAmount &lt;= 0 THEN 0 ELSE (a.goodsActualAmount / a.goodsRetailAmount * 100) END ), 0) AS goodsDiscountRate,
      ROUND((CASE WHEN a.itemActualAmount &lt;= 0 THEN 0 ELSE (a.itemActualAmount / a.itemRetailAmount * 100) END ), 0) AS itemDiscountRate,
      ROUND((CASE WHEN a.actualAmount &lt;= 0 THEN 0 ELSE (a.actualAmount / a.retailAmount * 100) END ), 0) AS discountRate
    FROM (
      SELECT
        creationDate,
        lsh,
        sysSellWayName,
        ROUND(SUM(CASE WHEN sysSellTypeId = 1 THEN quantity * retailPrice ELSE 0 END), 2) AS goodsRetailAmount,
        ROUND(SUM(CASE WHEN sysSellTypeId = 1 THEN quantity * actualRetailPrice ELSE 0 END), 2) AS goodsActualAmount,
        ROUND(SUM(CASE WHEN sysSellTypeId = 1 THEN quantity * costPrice ELSE 0 END), 2) AS goodsCostAmount,
        ROUND(SUM(CASE WHEN sysSellTypeId = 2 THEN quantity * retailPrice ELSE 0 END), 2) AS itemRetailAmount,
        ROUND(SUM(CASE WHEN sysSellTypeId = 2 THEN quantity * actualRetailPrice ELSE 0 END), 2) AS itemActualAmount,
        ROUND(SUM(quantity * retailPrice), 2) AS retailAmount,
        ROUND(SUM(quantity * actualRetailPrice), 2) AS actualAmount,
        ROUND(SUM(quantity * costPrice), 2) AS costAmount,
        sellerId,
        sellerName,
        cashierId,
        cashierName,
        sysClinicId,
        sysClinicName
      FROM view_dr_sell_record
      <trim prefix="where" suffixOverrides="and">
        <if test="creationDate != null &amp;&amp; creationDate.length == 2">
          (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
        </if>
        <if test="sysClinicId != null">
          (sysClinicId = #{sysClinicId}) and
        </if>
        <if test="true">
          (returned = 0) and
        </if>
        <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
          (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
        </if>
        <if test="lsh != null &amp;&amp; lsh.trim() != ''">
          (lsh like '${lsh}%') and
        </if>
      </trim>
      <if test="groupBy != null &amp;&amp; groupBy.trim() != ''">
        GROUP BY ${groupBy}
      </if>
      <if test="groupBy == null || groupBy.trim() == ''">
        GROUP BY sysClinicId
      </if>
    ) a
    <trim prefix="HAVING" suffixOverrides="and">
      <if test="goodsMarginRate != null &amp;&amp; goodsMarginRate.trim() != ''">
        /*注入查询 参数携带表达式运算符*/
        ((goodsRetailMarginRate - ABS(goodsActualMarginRate)) ${goodsMarginRate}) and
      </if>
      <if test="marginRate != null">
        /*注入查询 参数携带表达式运算符*/
        (ABS(retailMarginRate - ABS(actualMarginRate)) ${marginRate}) and
      </if>
      <if test="goodsDiscountRate != null">
        (goodsDiscountRate &lt;= #{goodsDiscountRate}) and
      </if>
      <if test="itemDiscountRate != null">
        (itemDiscountRate &lt;= #{itemDiscountRate}) and
      </if>
      <if test="discountRate != null">
        (discountRate &lt;= #{discountRate}) and
      </if>
    </trim>
    ORDER BY a.creationDate desc, a.sysClinicId
  </select>

  <!--日销售报表-->
  <select id="selectSellRecordDailyByCreationDate" resultType="map">
    SELECT
      ROUND(IFNULL(b.xyf, 0), 2) AS xyf,
      ROUND(IFNULL(b.zyf, 0), 2) AS zyf,
      ROUND(IFNULL(b.wsclf, 0), 2) AS wsclf,
      ROUND(IFNULL(b.yjxmf, 0), 2) AS yjxmf,
      ROUND(IFNULL(b.fzxmf, 0), 2) AS fzxmf,
      ROUND(IFNULL(b.qtxmf, 0), 2) AS qtxmf,
      ROUND(IFNULL(b.rxs, 0), 2) AS rxs,
      ROUND(IFNULL(a.yxs, 0), 2) AS yxs,
      d.yzb,
      ROUND((IFNULL(a.yxs, 0) / d.yzb * 100), 2) as wcl,
      a.sys_clinic_id AS sysClinicId,
      c.name AS sysClinicName
    FROM (
      SELECT
        SUM(quantity * actual_retail_price) AS yxs,
        sys_clinic_id
      FROM dr_sell_record
      <trim prefix="where" suffixOverrides="and">
        <if test="creationDate != null &amp;&amp; creationDate.length == 2">
          (DATE_FORMAT(creation_date, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
        </if>
      </trim>
      GROUP BY sys_clinic_id
    ) a
    LEFT JOIN (
      SELECT
        SUM(CASE WHEN sys_sell_type_id = 1 AND entity_type_id = 101  THEN (quantity * actual_retail_price) END) AS xyf,
        SUM(CASE WHEN sys_sell_type_id = 1 AND entity_type_id = 102  THEN (quantity * actual_retail_price) END) AS zyf,
        SUM(CASE WHEN sys_sell_type_id = 1 AND entity_type_id = 103  THEN (quantity * actual_retail_price) END) AS wsclf,
        SUM(CASE WHEN sys_sell_type_id = 2 AND entity_type_id = 101  THEN (quantity * actual_retail_price) END) AS yjxmf,
        SUM(CASE WHEN sys_sell_type_id = 2 AND entity_type_id = 102  THEN (quantity * actual_retail_price) END) AS fzxmf,
        SUM(CASE WHEN sys_sell_type_id = 2 AND entity_type_id = 103  THEN (quantity * actual_retail_price) END) AS qtxmf,
        SUM(quantity * actual_retail_price) AS rxs,
        sys_clinic_id
      FROM dr_sell_record
      <trim prefix="where" suffixOverrides="and">
        <if test="creationDate != null &amp;&amp; creationDate.length == 2">
          (DATE_FORMAT(creation_date, '%Y-%m-%d')= #{creationDate[1]}) and
        </if>
      </trim>
      GROUP BY sys_clinic_id
    ) b ON a.sys_clinic_id = b.sys_clinic_id
    LEFT JOIN sys_clinic c ON a.sys_clinic_id = c.`id`
    LEFT JOIN (
      select
        id,
        (case #{queryMonth}
         when 1 then IFNULL(january, 0) when 2 then IFNULL(february, 0) when 3 then IFNULL(march, 0)
         when 4 then IFNULL(april, 0) when 5 then IFNULL(may, 0) when 6 then IFNULL(june, 0)
         when 7 then IFNULL(july, 0) when 8 then IFNULL(august, 0) when 9 then IFNULL(september, 0)
         when 10 then IFNULL(october, 0) when 11 then IFNULL(november, 0) when 12 then IFNULL(december, 0)
         end) as yzb
      from sys_clinic_sell_target
    ) d on a.sys_clinic_id = d.id
    GROUP BY a.sys_clinic_id
    ORDER BY a.sys_clinic_id
  </select>

  <!--销售排行-->
  <select id="selectSellRecordSortByCriteria" resultType="map">
    SELECT
      sysSellTypeId, sysSellTypeName, entityTypeId, entityTypeName,entityId, entityOid, entityName, entityCode,
      specs, unitsId, unitsName, SUM(quantity) AS quantity,originName, manufacturerName, billingTypeId,
      billingTypeName, goodsClassifyId, goodsClassifyName, sysClinicId, sysClinicName
    FROM view_dr_sell_record
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="sysClinicId != null">
        (sysClinicId = #{sysClinicId}) and
      </if>
      <if test="sysSellTypeId != null">
        (sysSellTypeId = #{sysSellTypeId}) and
      </if>
      <if test="entityTypeId != null">
        (entityTypeId = #{entityTypeId}) and
      </if>
      <if test="sysClinicName != null &amp;&amp; sysClinicName.trim() != ''">
        (sysClinicName like '${sysClinicName}%' or sysClinicCode like '${sysClinicName}%') and
      </if>
      <if test="entityOid != null &amp;&amp; entityOid.trim() != ''">
        (entityOid like '${entityOid}%') and
      </if>
      <if test="entityName != null &amp;&amp; entityName.trim() != ''">
        (entityName like '${entityName}%' or entityCode like '${entityName}%') and
      </if>
    </trim>
    GROUP BY sysClinicId, sysSellTypeId, entityId
    ORDER BY quantity DESC
  </select>

  <!-- 销售统计财报 -->
  <select id="selectSellRecordStatisticsByCriteria" resultType="map">
    SELECT
      a.sys_clinic_id as sysClinicId,
      b.name AS sysClinicName,
      ROUND(IFNULL(a.xy_kp_hsxs,0), 2) AS xyKpHsxs,
      ROUND(IFNULL(a.xy_kp_wsxs,0), 2) AS xyKpWsxs,
      ROUND(IFNULL(a.xy_kp_xxs,0), 2) AS xyKpXxs,
      ROUND(IFNULL(a.zy_kp_hsxs,0), 2) AS zyKpHsxs,
      ROUND(IFNULL(a.zy_kp_wsxs,0), 2) AS zyKpWsxs,
      ROUND(IFNULL(a.zy_kp_xxs,0), 2) AS zyKpXxs,
      ROUND(IFNULL(a.wc_kp_hsxs,0), 2) AS wcKpHsxs,
      ROUND(IFNULL(a.wc_kp_wsxs,0), 2) AS wcKpWsxs,
      ROUND(IFNULL(a.wc_kp_xxs,0), 2) AS wcKpXxs,
      ROUND(IFNULL(a.goods_wkp_hsxs,0), 2) AS goodsWkpHsxs,
      ROUND(IFNULL(a.item_xs,0), 2) AS itemXs,
      ROUND(IFNULL(a.goods_wkp_hsxs,0) + IFNULL(a.item_xs,0), 2) AS goodsItemXs,
      ROUND(IFNULL(a.xy_kp_hsxs,0) +  IFNULL(a.zy_kp_hsxs,0) + IFNULL(a.wc_kp_hsxs,0) + IFNULL(a.goods_wkp_hsxs,0) + IFNULL(a.item_xs,0), 2) AS hsxsHj,
      ROUND(IFNULL(a.xy_kp_wsxs,0) + IFNULL(a.zy_kp_wsxs,0) + IFNULL(a.wc_kp_wsxs,0) + IFNULL(a.goods_wkp_hsxs,0) + IFNULL(a.item_xs,0), 2) AS wsxsHj,
      ROUND(IFNULL(a.xy_kp_xxs,0) + IFNULL(a.zy_kp_xxs,0) + IFNULL(a.wc_kp_xxs,0), 2) AS xxsHj,
      ROUND(IFNULL(a.goods_kp_wscb,0), 2) AS goodsKpWscb,
      ROUND(IFNULL(a.goods_wkp_hscb,0), 2) AS goodsWkpHscb,
      ROUND(IFNULL(a.goods_wkp_wscb,0), 2) AS goodsWkpWscb,
      ROUND(IFNULL(a.goods_wkp_jxs,0), 2) AS goodsWkpJxs,
      ROUND(IFNULL(a.goods_kp_wscb,0) + IFNULL(a.goods_wkp_hscb,0), 2) AS goodsCbHj
    FROM (
      SELECT
        sys_clinic_id,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 101 AND invoice_type_id IS NOT NULL)
          THEN (quantity * actual_retail_price) END) AS xy_kp_hsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 101 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * 100)) END) AS xy_kp_wsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 101 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * sell_tax_rate)) END) AS xy_kp_xxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 102 AND invoice_type_id IS NOT NULL)
          THEN (quantity * actual_retail_price) END) AS zy_kp_hsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 102 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * 100)) END) AS zy_kp_wsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 102 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * sell_tax_rate)) END) AS zy_kp_xxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 103 AND invoice_type_id IS NOT NULL)
          THEN (quantity * actual_retail_price) END) AS wc_kp_hsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 103 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * 100)) END) AS wc_kp_wsxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND entity_type_id = 103 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (actual_retail_price / (100 + sell_tax_rate) * sell_tax_rate)) END) AS wc_kp_xxs,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND invoice_type_id IS NULL)
          THEN (quantity * actual_retail_price) END) AS goods_wkp_hsxs,
        SUM(CASE WHEN (sys_sell_type_id = 2)
          THEN (quantity * actual_retail_price) END) AS item_xs,

        SUM(CASE WHEN (sys_sell_type_id = 1 AND invoice_type_id IS NOT NULL)
          THEN (quantity * (cost_price / (100 + purchase_tax_rate) * 100))END) AS goods_kp_wscb,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND invoice_type_id IS NULL)
          THEN (quantity * cost_price) END) AS goods_wkp_hscb,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND invoice_type_id IS NULL)
          THEN (quantity * (cost_price / (100 + purchase_tax_rate) * 100)) END) AS goods_wkp_wscb,
        SUM(CASE WHEN (sys_sell_type_id = 1 AND invoice_type_id IS NULL)
          THEN (quantity * (cost_price / (100 + purchase_tax_rate) * purchase_tax_rate)) END) AS goods_wkp_jxs
      FROM dr_sell_record
      <trim prefix="where" suffixOverrides="and">
        <if test="creationDate != null &amp;&amp; creationDate.length == 2">
          (DATE_FORMAT(creation_date, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
        </if>
        <if test="sysClinicId != null">
          (sys_clinic_id = #{sysClinicId}) and
        </if>
      </trim>
      GROUP BY sys_clinic_id
      ORDER BY sys_clinic_id
    ) a
    LEFT JOIN sys_clinic b ON a.sys_clinic_id = b.`id`
  </select>

</mapper>
